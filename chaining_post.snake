import os
# list all video files
directories, files, = glob_wildcards('/scratch/clemens10/chaining/dat/{directory}/{file}.h5')

# remove recordings w/o tracks
directories = [directory for directory in directories if os.path.exists(f'/scratch/clemens10/chaining/dat/{directory}/{directory}.h5')]

# generate inputs and outputs from listing
trkfiles = expand("/scratch/clemens10/chaining/dat/{directory}/{file}.h5", zip, directory=directories, file=directories)
spdfiles = expand("/scratch/clemens10/chaining/res/{directory}_spd.h5", zip, directory=directories)

rule all:
   input: spdfiles


rule postprocess:
  input:
      tracks="/scratch/clemens10/chaining/dat/{directory}/{directory}.h5",
  params:
      snd_logs="/scratch/clemens10/chaining/dat/{directory}/{directory}_snd.log",
      logfile="/scratch/clemens10/chaining/dat/{directory}/{directory}_post.log",
  output: "/scratch/clemens10/chaining/res/{directory}_spd.h5",
  shell: "python3 ~/analysis/scripts/postprocessing_chaining.py {input.tracks} {output} --networkmotifs; cp {input.tracks} /scratch/clemens10/chaining/res/"
